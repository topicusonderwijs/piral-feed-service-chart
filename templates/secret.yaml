apiVersion: v1
kind: Secret
metadata:
  name: {{ template "feed-service.fullname" . }}-secret
  labels:
    app: {{ template "feed-service.name" . }}
    chart: {{ template "feed-service.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- include "feed-service.labels" . | nindent 4 }}
type: Opaque
data: 
  {{- if (not .Values.license.existingSecret) }}
  # License key for the feed service, if not provided with separate secret
  PIRAL_LICENSE_KEY: {{ required "Please provide a license key" .Values.license.licenseKey | b64enc | quote }}
  {{- end }}

  ## --------------------
  ## Authentication
  ## --------------------
  {{- if (eq .Values.authentication.provider "local") }}
  ## Local authentication
  {{- if (not .Values.authentication.local.passwordSecret) }}
  # Password for the admin when using local authentication
  PIRAL_AUTH_LOCAL_PASS: {{ required "Please provide an administrator password when choosing local authentication" .Values.authentication.local.password | b64enc | quote }}
  {{- end }}
  {{- end }}
  # Microsoft Azure AD Authentication
  {{- if (eq .Values.authentication.provider "microsoft") }}
  PIRAL_AUTH_MICROSOFT_CLIENTID: {{ required "Please provide a client id for the Microsoft authentication provider" .Values.authentication.microsoft.clientId | b64enc | quote }}
  PIRAL_AUTH_MICROSOFT_TENANTID: {{ required "Please provide a tenant id for the Microsoft authentication provider" .Values.authentication.microsoft.tenantId | b64enc | quote }}
  {{- if (.Values.authentication.microsoft.clientSecret ) }}
  PIRAL_AUTH_MICROSOFT_CLIENTSECRET: "{{ .Values.authentication.microsoft.clientSecret }}"
  {{- end }}
  {{- end }}

  ## --------------------
  ## File Storage
  ## --------------------
    ## Azure Blob Storage
  {{- if (eq .Values.fileStorage.provider "azure-blobstorage") }}
  PIRAL_FS_BLOB_STORAGE_KEY: {{ required "Azure Blob Storage key is required" .Values.fileStorage.azureBlobStorage.key | b64enc | quote }}
  {{- end }}

  ## AWS S3 Storage
  {{- if (eq .Values.fileStorage.provider "aws-s3") }}
  PIRAL_FS_S3_STORAGE_ACCESS_KEY: {{ required "AWS Storage Access Key is required" .Values.fileStorage.awsS3.accessKey | b64enc | quote }}
  {{- end }}

  ## DigitalOcean Spaces Storage
  {{- if (eq .Values.fileStorage.provider "do-spaces") }}
  PIRAL_FS_DO_SPACES_ACCESS_KEY: {{ required "DigitalOcean Spaces Access Key is required" .Values.fileStorage.doSpaces.accessKey | b64enc | quote }}
  {{- end }}

  ## Google Cloud Storage
  {{- if (eq .Values.fileStorage.provider "google-storage") }}
  PIRAL_FS_GC_STORAGE_PRIVATE_KEY: {{ required "Google Cloud Storage private Key is required" .Values.fileStorage.googleCloudStorage.privateKey | b64enc | quote }}
  {{- end }}


  ## --------------------
  ## Database
  ## --------------------
  ## Azure Table Storage
  {{- if (eq .Values.database.provider "azure-tablestorage") }}
  PIRAL_DB_TABLE_STORAGE_KEY: {{ required "Azure Table Storage key is required" .Values.database.azureTableStorage.key | b64enc | quote }}
  {{- end }}
  ## Redis
  {{- if (eq .Values.database.provider "redis") }}
  PIRAL_DB_REDIS_AUTH_PASS: {{ required "Please provide the password for accessing the Redis database" .Values.database.redis.password | b64enc | quote }}
  {{- end }}
  ## MongoDB
  {{- if (eq .Values.database.provider "mongodb") }}
  PIRAL_DB_MONGO_STORAGE_CONNECTION: {{ required "Please provide the connection string for accessing the MongoDB database" .Values.database.mongodb.connectionString | b64enc | quote }}
  {{- end }}
  ## SQL
  {{- if (eq .Values.database.provider "sql") }}
  PIRAL_DB_SQL_PASS: {{ required "Please provide the user password for accessing the SQL database" .Values.database.sql.password | b64enc | quote }}
  {{- end }}
  ## DynamoDB
  {{- if (eq .Values.database.provider "aws-dynamodb") }}
  PIRAL_DB_DYNAMODB_ACCESS_ID: "{{ required "Please provide the Amazon DynamoDB AWS access key ID" .Values.database.dynamoDb.accessId }}"
  PIRAL_DB_DYNAMODB_ACCESS_KEY: "{{ required "Please provide the Amazon DynamoDB AWS secret access key" .Values.database.dynamoDb.accessKey }}"
  {{- end }}

  ## --------------------
  ## Cache
  ## --------------------
  ## Redis
  {{- if (eq .Values.cache.provider "redis") }}
  PIRAL_CACHE_REDIS_AUTH_PASS: {{ required "Please provide the password for accessing the Redis cache" .Values.cache.redis.password | b64enc | quote }}
  {{- end }}
  ## Memcache
  {{- if (eq .Values.cache.provider "memcache") }}
  {{- if (.Values.cache.memcache.authPass ) }}
  PIRAL_CACHE_MEMCACHE_AUTH_PASS: "{{ .Values.cache.memcache.authPass }}"
  {{- end }}
  {{- end }}

  ## -----------------------
  ## Notifications
  ## -----------------------
  ## SMTP
  {{- if (eq .Values.notifications.provider "smtp") }}
  {{- if (.Values.notifications.smtp.password) }}
  PIRAL_NOTIFICATION_SMTP_AUTH_PASS: {{ .Values.notifications.smtp.password | b64enc | quote }}
  {{- end }}
  {{- end }}
  ## SendGrid
  {{- if (eq .Values.notifications.provider "sendgrid") }}
  PIRAL_NOTIFICATION_SENDGRID_KEY: {{ required "Please provide an API key for using SendGrid" .Values.notifications.sendgrid.apiKey | b64enc | quote }}
  {{- end }}